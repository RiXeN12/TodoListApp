@model TaskItem

<div class="card mb-3 @(Model.IsCompleted ? "bg-light" : "")">
    <div class="card-body">
        <div class="d-flex justify-content-between align-items-start">
            <div class="form-check">
                <input type="checkbox" class="form-check-input task-complete-checkbox"
                       data-task-id="@Model.Id"
                @(Model.IsCompleted ? "checked" : "")>
                <h5 class="card-title @(Model.IsCompleted ? "text-muted text-decoration-line-through" : "")">
                    @Model.Title
                </h5>
            </div>
            <div class="dropdown">
                <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                    <i class="bi bi-three-dots-vertical"></i>
                </button>
                <ul class="dropdown-menu">
                    <li><a class="dropdown-item" asp-action="Edit" asp-route-id="@Model.Id">Редагувати</a></li>
                    <li><a class="dropdown-item" asp-action="Delete" asp-route-id="@Model.Id">Видалити</a></li>
                </ul>
            </div>
        </div>

        <p class="card-text small">@Model.Description</p>

        @if (Model.DueDate.HasValue)
        {
            <p class="card-text">
                <small class="@(Model.DueDate.Value.Date < DateTime.Today ? "text-danger" : "text-muted")">
                    <i class="bi bi-calendar"></i> До: @Model.DueDate.Value.ToShortDateString()
                </small>
            </p>
        }

        @if (!string.IsNullOrEmpty(Model.Category))
        {
            <span class="badge bg-info">@Model.Category</span>
        }
    </div>
</div>